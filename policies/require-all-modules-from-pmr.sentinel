# This policy uses the tfconfig/v2 import to require that all non-root
# modules come from the Private Module Registry

# Based On
# https://github.com/hashicorp/terraform-guides/blob/master/governance/third-generation/cloud-agnostic/require-all-resources-from-pmr.sentinel

# Import the tfconfig/v2 import, but use the alias "tfconfig"
import "tfconfig/v2" as tfconfig

# Import the tfrun import
import "tfrun"

# Standard strings import
import "strings"

### Parameters ###
# The address of the TFC or TFE server
param address default "app.terraform.io"

# The organizations on the TFC or TFE server that modules can some from
param organizations

# Fnd modules called from root module that are not in the desired PMR
violatingMCs = filter tfconfig.module_calls as index, mc {
	mc.module_address is "" and
		not any organizations as organization {
			strings.has_prefix(mc.source, address + "/" + organization)
		}
}

# Print violation messages for invalid modules
if length(violatingMCs) > 0 and not tfrun.is_destroy {
	print("All modules called from the root module must come from a",
		"private module registry in one of these organizations:", organizations, " on server", address)
	for violatingMCs as address, mc {
		print("The module", mc.name, "called from the root module has source",
			mc.source)
	}
}

# Main rule
validated = tfrun.is_destroy or
	(length(violatingMCs) is 0)

main = rule {
	validated is true
}
